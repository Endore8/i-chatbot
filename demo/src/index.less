.I-ChatBot {
  background-color: ghostwhite;
  padding: 0.5em;

  .absolute(6em, 4em, 1em);

  ul.ActionBar {
    list-style-type: none;
    margin: 0;
    overflow-x: scroll;
    padding: 0.5em;
    text-align: center;
    vertical-align: middle;
    white-space: nowrap;

    .absolute(auto, 0, 0);

    li.Action {
      display: inline-block;
      margin: 0 0.5em;

      button, input {
        border: none;
        border-radius: 6px;
        outline: none;
        padding: 0.5em 1em;
      }

      button.GetStartedButton {
        background-color: antiquewhite;
      }

      button.ReplyButton {
        background-color: lightblue;
      }

      div.TextInput {
        input.Input {
        }

        button.Submit {
          background-color: lightblue;
          margin: 0 0.5em;
        }
      }
    }

  }

  ul.Messages {
    list-style-type: none;
    margin: 0;
    overflow: hidden;
    overflow-y: scroll;
    padding: 0.5em;

    .absolute(0, 3em, 0);

    li.Message {
      display: flex;
      margin: 0.25em 0;
      overflow: hidden;

      div.Message-Content {
        border-radius: 6px;
        max-width: 60%;
        padding: 0.5em 1em;

        div.Typing {
          background-color: lightgray;
          border-radius: 6px;
          display: table;
          padding: 0.5em;
          width: auto;

          span {
            background-color: darkgray;
            border-radius: 50%;
            float: left;
            height: 0.5em;
            margin: 0 0.2em;
            opacity: 0.4;
            width: 0.5em;
          }

          span:nth-of-type(1) {
            animation: 1s blink infinite 0.3333s;
          }

          span:nth-of-type(2) {
            animation: 1s blink infinite 0.6666s;
          }

          span:nth-of-type(3) {
            animation: 1s blink infinite 0.9999s;
          }

          @keyframes blink {
            50% {
              opacity: 1;
            }
          }
        }
      }
    }

    li.Message.Inbound {
      align-items: flex-end;
      justify-content: flex-end;

      div.Message-Content {
        background-color: darkgray;
        color: white;
        text-align: right;
      }
    }

    li.Message.Outbound {
      align-items: flex-start;
      justify-content: flex-start;

      div.Message-Content {
        background-color: lightgray;
        color: black;
        text-align: left;
      }
    }
  }

  /// Animations
  // - ActionBar
  .ActionBar-enter {
    transform: translate3d(0, 500%, 0);
  }

  .ActionBar-enter.ActionBar-enter-active {
    transform: translate3d(0, 0, 0);
    transition: all 500ms ease-out;
  }

  .ActionBar-leave {
    opacity: 1;
  }

  .ActionBar-leave.ActionBar-leave-active {
    opacity: 0;
    transition: all 300ms ease-out;
  }

  // - Messages
  .Messages-enter.Inbound {
    transform: translate3d(200%, 0, 0);
  }

  .Messages-enter.Outbound {
    transform: translate3d(-200%, 0, 0);
  }

  .Messages-enter.Messages-enter-active  {
    transform: translate3d(0, 0, 0);
    transition: all 500ms ease-out;
  }

  .Messages-leave {
    opacity: 1;
  }

  .Messages-leave.Messages-leave-active {
    opacity: 0;
    transition: all 300ms ease-out;
  }
}

// Demo

html, body {
  height: 100%;
}

#demo {
  height: 100%;
  min-height: 100%;
}

.Container {
  width: 100%;
  height: 100%;
  min-height: 100%;

  .Content {
    margin: 0 auto;
    max-width: 800px;
    padding: 1em;
    position: absolute;

    .absolute(1em);

    .xs({ .absolute(0.5em); padding: 0.5em; });
    .sm({ width: 80% });
    .md({ width: 60% });
    .lg({ width: 50% });
  }
}

.Demo {
  .Extra-Actions {
    .absolute(auto, 1em, 1em);

    height: 2em;
  }
}

.xs (@content) {
  @media (max-width: 767px) { @content();
  }
}

.sm (@content) {
  @media (min-width: 768px) and (max-width: 991px) { @content();
  }
}

.md (@content) {
  @media (min-width: 992px) and (max-width: 1199px) { @content();
  }
}

.lg (@content) {
  @media (min-width: 1200px) { @content();
  }
}

.absolute (@distance) {
  position: absolute;
  left: @distance;
  right: @distance;
  bottom: @distance;
  top: @distance;
}

.absolute(@top, @bottom, @horizontal) {
  position: absolute;
  left: @horizontal;
  right: @horizontal;
  bottom: @bottom;
  top: @top;
}
